name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - main
  release:
    types:
      - published

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: dist-sdist
        path: dist/*.tar.gz

  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
        python: [cp38, cp39, cp310, cp311, cp312, cp313]
        exclude:
          # The first Python version to target Apple arm64 architectures is 3.9
          - os: macos-14
            python: cp38
    name: >
      ${{ matrix.python }} wheel for ${{ matrix.os }}
      ${{ (endsWith(matrix.python, '_stable') && '(stable ABI)') || '' }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - uses: actions/setup-python@v4
      name: Install Python
      with:
        python-version: '3.10'

    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel==2.20.0

    ################################################################
    # Set up envvars to build the correct wheel (stable ABI or not)
    ################################################################
    - name: Prepare cibuildwheel environment (UNIX)
      if: ${{ ! endsWith(matrix.python, '_stable') && runner.os != 'Windows' }}
      run: |
        echo "CIBW_BUILD=${{ matrix.python }}-*" >> $GITHUB_ENV

    - name: Prepare cibuildwheel environment (Windows)
      if: ${{ ! endsWith(matrix.python, '_stable') && runner.os == 'Windows' }}
      run: |
        echo "CIBW_BUILD=${{ matrix.python }}-*" >> $env:GITHUB_ENV

    - name: Prepare cibuildwheel environment for stable ABI wheel (UNIX)
      if: ${{ endsWith(matrix.python, '_stable') && runner.os != 'Windows' }}
      run: |
        stable_cp=$(echo ${{ matrix.python }} | cut -d_ -f1) &&
        echo "CIBW_BUILD=${stable_cp}-*" >> $GITHUB_ENV &&
        echo "CIBW_CONFIG_SETTINGS=\"wheel.py-api=cp312\" \"cmake.args=-DDRJIT_STABLE_ABI=ON\"" >> $GITHUB_ENV

    - name: Prepare cibuildwheel environment for stable ABI wheel (Windows)
      if: ${{ endsWith(matrix.python, '_stable') && runner.os == 'Windows' }}
      run: |
        $stable_cp = '${{ matrix.python }}' -split '_'
        echo "CIBW_BUILD=$($stable_cp[0])-*" >> $env:GITHUB_ENV
        echo "CIBW_CONFIG_SETTINGS=wheel.py-api=cp312 cmake.args=-DDRJIT_STABLE_ABI=ON" >> $env:GITHUB_ENV

    #########################
    # Build and store wheels
    #########################
    - name: Build wheel
      run: |
        python -m cibuildwheel --output-dir wheelhouse

    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: ./wheelhouse/*.whl

  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/setup-python@v5
    - uses: actions/download-artifact@v4
      with:
        name: dist
        pattern: dist-*
        merge-multiple: true

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}